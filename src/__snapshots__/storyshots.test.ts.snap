// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Palette Dark 1`] = `
.emotion-0 {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  gap: 1.5rem;
  padding: 1.5rem;
}

.emotion-1 {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 1.5rem;
}

.emotion-1>.label {
  padding: 0.5rem;
  text-align: center;
  --tw-text-opacity: 1;
  color: rgba(99, 102, 241, var(--tw-text-opacity));
}

.emotion-1>.box {
  padding: 0.5rem;
  text-align: center;
  --tw-bg-opacity: 1;
  background-color: rgba(99, 102, 241, var(--tw-bg-opacity));
}

.emotion-3 {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 1.5rem;
}

.emotion-3>.label {
  padding: 0.5rem;
  text-align: center;
  --tw-text-opacity: 1;
  color: rgba(236, 72, 153, var(--tw-text-opacity));
}

.emotion-3>.box {
  padding: 0.5rem;
  text-align: center;
  --tw-bg-opacity: 1;
  background-color: rgba(236, 72, 153, var(--tw-bg-opacity));
}

.emotion-5 {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 1.5rem;
}

.emotion-5>.label {
  padding: 0.5rem;
  text-align: center;
  --tw-text-opacity: 1;
  color: rgba(239, 68, 68, var(--tw-text-opacity));
}

.emotion-5>.box {
  padding: 0.5rem;
  text-align: center;
  --tw-bg-opacity: 1;
  background-color: rgba(239, 68, 68, var(--tw-bg-opacity));
}

.emotion-7 {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 1.5rem;
}

.emotion-7>.label {
  padding: 0.5rem;
  text-align: center;
  --tw-text-opacity: 1;
  color: rgba(245, 158, 11, var(--tw-text-opacity));
}

.emotion-7>.box {
  padding: 0.5rem;
  text-align: center;
  --tw-bg-opacity: 1;
  background-color: rgba(245, 158, 11, var(--tw-bg-opacity));
}

.emotion-9 {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 1.5rem;
}

.emotion-9>.label {
  padding: 0.5rem;
  text-align: center;
  --tw-text-opacity: 1;
  color: rgba(59, 130, 246, var(--tw-text-opacity));
}

.emotion-9>.box {
  padding: 0.5rem;
  text-align: center;
  --tw-bg-opacity: 1;
  background-color: rgba(59, 130, 246, var(--tw-bg-opacity));
}

.emotion-11 {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 1.5rem;
}

.emotion-11>.label {
  padding: 0.5rem;
  text-align: center;
  --tw-text-opacity: 1;
  color: rgba(16, 185, 129, var(--tw-text-opacity));
}

.emotion-11>.box {
  padding: 0.5rem;
  text-align: center;
  --tw-bg-opacity: 1;
  background-color: rgba(16, 185, 129, var(--tw-bg-opacity));
}

<div
  className="emotion-0"
  style={
    Object {
      "backgroundColor": "#747474",
    }
  }
>
  <div
    className="emotion-1 emotion-2"
  >
    <div
      className="label"
    >
      primary
    </div>
    <div
      className="box"
    >
      primary
    </div>
  </div>
  <div
    className="emotion-3 emotion-2"
  >
    <div
      className="label"
    >
      secondary
    </div>
    <div
      className="box"
    >
      secondary
    </div>
  </div>
  <div
    className="emotion-5 emotion-2"
  >
    <div
      className="label"
    >
      error
    </div>
    <div
      className="box"
    >
      error
    </div>
  </div>
  <div
    className="emotion-7 emotion-2"
  >
    <div
      className="label"
    >
      warning
    </div>
    <div
      className="box"
    >
      warning
    </div>
  </div>
  <div
    className="emotion-9 emotion-2"
  >
    <div
      className="label"
    >
      info
    </div>
    <div
      className="box"
    >
      info
    </div>
  </div>
  <div
    className="emotion-11 emotion-2"
  >
    <div
      className="label"
    >
      success
    </div>
    <div
      className="box"
    >
      success
    </div>
  </div>
</div>
`;

exports[`Storyshots Palette Light 1`] = `
.emotion-0 {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  gap: 1.5rem;
  padding: 1.5rem;
}

.emotion-1 {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 1.5rem;
}

.emotion-1>.label {
  padding: 0.5rem;
  text-align: center;
  --tw-text-opacity: 1;
  color: rgba(99, 102, 241, var(--tw-text-opacity));
}

.emotion-1>.box {
  padding: 0.5rem;
  text-align: center;
  --tw-bg-opacity: 1;
  background-color: rgba(99, 102, 241, var(--tw-bg-opacity));
}

.emotion-3 {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 1.5rem;
}

.emotion-3>.label {
  padding: 0.5rem;
  text-align: center;
  --tw-text-opacity: 1;
  color: rgba(236, 72, 153, var(--tw-text-opacity));
}

.emotion-3>.box {
  padding: 0.5rem;
  text-align: center;
  --tw-bg-opacity: 1;
  background-color: rgba(236, 72, 153, var(--tw-bg-opacity));
}

.emotion-5 {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 1.5rem;
}

.emotion-5>.label {
  padding: 0.5rem;
  text-align: center;
  --tw-text-opacity: 1;
  color: rgba(239, 68, 68, var(--tw-text-opacity));
}

.emotion-5>.box {
  padding: 0.5rem;
  text-align: center;
  --tw-bg-opacity: 1;
  background-color: rgba(239, 68, 68, var(--tw-bg-opacity));
}

.emotion-7 {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 1.5rem;
}

.emotion-7>.label {
  padding: 0.5rem;
  text-align: center;
  --tw-text-opacity: 1;
  color: rgba(245, 158, 11, var(--tw-text-opacity));
}

.emotion-7>.box {
  padding: 0.5rem;
  text-align: center;
  --tw-bg-opacity: 1;
  background-color: rgba(245, 158, 11, var(--tw-bg-opacity));
}

.emotion-9 {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 1.5rem;
}

.emotion-9>.label {
  padding: 0.5rem;
  text-align: center;
  --tw-text-opacity: 1;
  color: rgba(59, 130, 246, var(--tw-text-opacity));
}

.emotion-9>.box {
  padding: 0.5rem;
  text-align: center;
  --tw-bg-opacity: 1;
  background-color: rgba(59, 130, 246, var(--tw-bg-opacity));
}

.emotion-11 {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 1.5rem;
}

.emotion-11>.label {
  padding: 0.5rem;
  text-align: center;
  --tw-text-opacity: 1;
  color: rgba(16, 185, 129, var(--tw-text-opacity));
}

.emotion-11>.box {
  padding: 0.5rem;
  text-align: center;
  --tw-bg-opacity: 1;
  background-color: rgba(16, 185, 129, var(--tw-bg-opacity));
}

<div
  className="emotion-0"
  style={
    Object {
      "backgroundColor": "#f5f5f5",
    }
  }
>
  <div
    className="emotion-1 emotion-2"
  >
    <div
      className="label"
    >
      primary
    </div>
    <div
      className="box"
    >
      primary
    </div>
  </div>
  <div
    className="emotion-3 emotion-2"
  >
    <div
      className="label"
    >
      secondary
    </div>
    <div
      className="box"
    >
      secondary
    </div>
  </div>
  <div
    className="emotion-5 emotion-2"
  >
    <div
      className="label"
    >
      error
    </div>
    <div
      className="box"
    >
      error
    </div>
  </div>
  <div
    className="emotion-7 emotion-2"
  >
    <div
      className="label"
    >
      warning
    </div>
    <div
      className="box"
    >
      warning
    </div>
  </div>
  <div
    className="emotion-9 emotion-2"
  >
    <div
      className="label"
    >
      info
    </div>
    <div
      className="box"
    >
      info
    </div>
  </div>
  <div
    className="emotion-11 emotion-2"
  >
    <div
      className="label"
    >
      success
    </div>
    <div
      className="box"
    >
      success
    </div>
  </div>
</div>
`;

exports[`Storyshots atoms/Checkbox Default 1`] = `
.emotion-0> {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-0>label>input {
  margin-right: 0.5rem;
  border-radius: 0.25rem;
}

.emotion-0>div>.error {
  --tw-text-opacity: 1;
  color: rgba(239, 68, 68, var(--tw-text-opacity));
}

<div
  className="emotion-0 emotion-1"
>
  <label>
    <input
      aria-invalid="false"
      aria-label="label"
      type="checkbox"
    />
    <span
      className="label"
    >
      label
    </span>
  </label>
</div>
`;

exports[`Storyshots atoms/Select Default 1`] = `
.emotion-0 .select__control {
  --tw-bg-opacity: 1;
  background-color: rgba(243, 244, 246, var(--tw-bg-opacity));
  border-radius: 0.25rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgba(156, 163, 175, var(--tw-border-opacity));
}

.emotion-0 .select__control:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-border-opacity: 1;
  border-color: rgba(99, 102, 241, var(--tw-border-opacity));
}

.emotion-0 .select__value-container {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.emotion-0 .error {
  --tw-text-opacity: 1;
  color: rgba(239, 68, 68, var(--tw-text-opacity));
}

.emotion-2 {
  position: relative;
  box-sizing: border-box;
}

.emotion-3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: hsl(0, 0%, 100%);
  border-color: hsl(0, 0%, 80%);
  border-radius: 4px;
  border-style: solid;
  border-width: 1px;
  cursor: default;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  min-height: 38px;
  outline: 0!important;
  position: relative;
  -webkit-transition: all 100ms;
  transition: all 100ms;
  box-sizing: border-box;
}

.emotion-3:hover {
  border-color: hsl(0, 0%, 70%);
}

.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 2px 8px;
  -webkit-overflow-scrolling: touch;
  position: relative;
  overflow: hidden;
  box-sizing: border-box;
}

.emotion-5 {
  color: hsl(0, 0%, 50%);
  margin-left: 2px;
  margin-right: 2px;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  box-sizing: border-box;
}

.emotion-6 {
  margin: 2px;
  padding-bottom: 2px;
  padding-top: 2px;
  visibility: visible;
  color: hsl(0, 0%, 20%);
  box-sizing: border-box;
}

.emotion-7 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  box-sizing: border-box;
}

.emotion-8 {
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  background-color: hsl(0, 0%, 80%);
  margin-bottom: 8px;
  margin-top: 8px;
  width: 1px;
  box-sizing: border-box;
}

.emotion-9 {
  color: hsl(0, 0%, 80%);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px;
  -webkit-transition: color 150ms;
  transition: color 150ms;
  box-sizing: border-box;
}

.emotion-9:hover {
  color: hsl(0, 0%, 60%);
}

.emotion-10 {
  display: inline-block;
  fill: currentColor;
  line-height: 1;
  stroke: currentColor;
  stroke-width: 0;
}

<div
  className="emotion-0 emotion-1"
>
  <label />
  <div
    className=" emotion-2"
    onKeyDown={[Function]}
  >
    <div
      className="select__control emotion-3"
      onMouseDown={[Function]}
      onTouchEnd={[Function]}
    >
      <div
        className="select__value-container emotion-4"
      >
        <div
          className="select__placeholder emotion-5"
        >
          プレースホルダー
        </div>
        <div
          className="emotion-6"
        >
          <div
            className="select__input"
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <input
              aria-autocomplete="list"
              autoCapitalize="none"
              autoComplete="off"
              autoCorrect="off"
              disabled={false}
              id="react-select-2-input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              spellCheck="false"
              style={
                Object {
                  "background": 0,
                  "border": 0,
                  "boxSizing": "content-box",
                  "color": "inherit",
                  "fontSize": "inherit",
                  "label": "input",
                  "opacity": 1,
                  "outline": 0,
                  "padding": 0,
                  "width": "1px",
                }
              }
              tabIndex="0"
              type="text"
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </div>
      </div>
      <div
        className="select__indicators emotion-7"
      >
        <span
          className="select__indicator-separator emotion-8"
        />
        <div
          aria-hidden="true"
          className="select__indicator select__dropdown-indicator emotion-9"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
        >
          <svg
            aria-hidden="true"
            className="emotion-10"
            focusable="false"
            height={20}
            viewBox="0 0 20 20"
            width={20}
          >
            <path
              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots atoms/SimpleSelect Default 1`] = `
.emotion-0>select {
  width: 100%;
  --tw-bg-opacity: 1;
  background-color: rgba(243, 244, 246, var(--tw-bg-opacity));
  border-radius: 0.25rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgba(156, 163, 175, var(--tw-border-opacity));
}

.emotion-0>select:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-border-opacity: 1;
  border-color: rgba(99, 102, 241, var(--tw-border-opacity));
}

.emotion-0>.error {
  --tw-text-opacity: 1;
  color: rgba(239, 68, 68, var(--tw-text-opacity));
}

<div
  className="emotion-0 emotion-1"
>
  <label
    htmlFor="select"
  />
  <select
    aria-invalid="false"
    id="select"
    name="select"
  >
    <option
      value="op1"
    >
      label1
    </option>
    <option
      value="op2"
    >
      label2
    </option>
    <option
      value="op3"
    >
      label3
    </option>
  </select>
</div>
`;

exports[`Storyshots atoms/TextInput Input 1`] = `
.emotion-0>input {
  width: 100%;
  --tw-bg-opacity: 1;
  background-color: rgba(243, 244, 246, var(--tw-bg-opacity));
  border-radius: 0.25rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgba(156, 163, 175, var(--tw-border-opacity));
}

.emotion-0>input:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-border-opacity: 1;
  border-color: rgba(99, 102, 241, var(--tw-border-opacity));
}

.emotion-0>.error {
  --tw-text-opacity: 1;
  color: rgba(239, 68, 68, var(--tw-text-opacity));
}

<div
  className="emotion-0 emotion-1"
>
  <label />
  <input
    aria-invalid="false"
    placeholder="placeholder"
    type="text"
  />
</div>
`;

exports[`Storyshots atoms/buttons/Button Default 1`] = `
.emotion-0 {
  font-size: 1rem;
  line-height: 1.5rem;
  border-radius: 0.25rem;
  border-style: none;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

<button
  className="emotion-0 emotion-1"
  type="button"
>
  Button
</button>
`;

exports[`Storyshots atoms/buttons/Button Large 1`] = `
.emotion-0 {
  font-size: 1rem;
  line-height: 1.5rem;
  border-radius: 0.25rem;
  border-style: none;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  font-size: 1.125rem;
  line-height: 1.75rem;
}

<button
  className="emotion-0 emotion-1"
  size="large"
  type="button"
>
  Button
</button>
`;

exports[`Storyshots atoms/buttons/Button Primary 1`] = `
.emotion-0 {
  font-size: 1rem;
  line-height: 1.5rem;
  border-radius: 0.25rem;
  border-style: none;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  --tw-bg-opacity: 1;
  background-color: rgba(99, 102, 241, var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgba(229, 231, 235, var(--tw-text-opacity));
}

<button
  className="emotion-0 emotion-1"
  type="button"
>
  Button
</button>
`;

exports[`Storyshots atoms/buttons/Button Secondary 1`] = `
.emotion-0 {
  font-size: 1rem;
  line-height: 1.5rem;
  border-radius: 0.25rem;
  border-style: none;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  --tw-bg-opacity: 1;
  background-color: rgba(236, 72, 153, var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgba(229, 231, 235, var(--tw-text-opacity));
}

<button
  className="emotion-0 emotion-1"
  type="button"
>
  Button
</button>
`;

exports[`Storyshots atoms/buttons/Button Small 1`] = `
.emotion-0 {
  font-size: 1rem;
  line-height: 1.5rem;
  border-radius: 0.25rem;
  border-style: none;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

<button
  className="emotion-0 emotion-1"
  size="small"
  type="button"
>
  Button
</button>
`;

exports[`Storyshots atoms/icons/TvIcon Default 1`] = `
<svg
  className="emotion-0 emotion-1"
  fill="none"
  height={24}
  stroke="currentColor"
  viewBox="0 0 24 24"
  width={24}
  xmlns="http://www.w3.org/2000/svg"
>
  <path
    d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
    strokeLinecap="round"
    strokeLinejoin="round"
    strokeWidth="2"
  />
</svg>
`;

exports[`Storyshots molecules/CookieNotification Default 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  width: 100%;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  --tw-bg-opacity: 1;
  background-color: rgba(107, 114, 128, var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 700;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 500ms;
}

.emotion-0>div>.acceptButton {
  --tw-bg-opacity: 1;
  background-color: rgba(165, 180, 252, var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
  font-weight: 700;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
  margin-right: 0.5rem;
  border-style: none;
  cursor: pointer;
}

.emotion-0>div>.acceptButton:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(199, 210, 254, var(--tw-bg-opacity));
}

.emotion-0>div>.declineButton {
  background-color: transparent;
  -webkit-text-decoration: none;
  text-decoration: none;
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
  font-weight: 700;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
  border-style: none;
  cursor: pointer;
}

.emotion-0>div>.declineButton:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

<div
  className="emotion-0 emotion-1"
  style={
    Object {
      "bottom": "0",
    }
  }
>
  <div
    style={Object {}}
  >
    This website uses cookies to enhance the user experience.
  </div>
  <div>
    <button
      aria-label="Accept cookies"
      className="acceptButton"
      id="rcc-confirm-button"
      onClick={[Function]}
      style={Object {}}
    >
      I understand
    </button>
  </div>
</div>
`;

exports[`Storyshots molecules/Dialog Default 1`] = `
<button
  aria-describedby="popup-1"
  onClick={[Function]}
  type="button"
>
  click me
</button>
`;

exports[`Storyshots molecules/HeaderMenu Desktop 1`] = `
.emotion-0 {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

@media (min-width: 1024px) {
  .emotion-0 {
    -webkit-box-flex: 1;
    -webkit-flex-grow: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
  }
}

.emotion-0>a {
  display: block;
  margin-top: 1rem;
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

@media (min-width: 1024px) {
  .emotion-0>a {
    display: inline-block;
    margin-top: 0px;
  }
}

.emotion-0>a:not(:last-child) {
  margin-right: 1rem;
}

<div
  className="emotion-0 emotion-1"
>
  <a
    href="/users-ssr"
    onClick={[Function]}
    onMouseEnter={[Function]}
  >
    Users SSR
  </a>
  <a
    href="/users-ssg"
    onClick={[Function]}
    onMouseEnter={[Function]}
  >
    Users SSG
  </a>
  <a
    href="/users-swr"
    onClick={[Function]}
    onMouseEnter={[Function]}
  >
    Users useSWR
  </a>
  <a
    href="/users-recoil"
    onClick={[Function]}
    onMouseEnter={[Function]}
  >
    Users useUsers
  </a>
</div>
`;

exports[`Storyshots molecules/HeaderMenu Mobile 1`] = `
.emotion-0 {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

@media (min-width: 1024px) {
  .emotion-0 {
    -webkit-box-flex: 1;
    -webkit-flex-grow: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
  }
}

.emotion-0>a {
  display: block;
  margin-top: 1rem;
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

@media (min-width: 1024px) {
  .emotion-0>a {
    display: inline-block;
    margin-top: 0px;
  }
}

.emotion-0>a:not(:last-child) {
  margin-right: 1rem;
}

<div
  className="emotion-0 emotion-1"
>
  <a
    href="/users-ssr"
    onClick={[Function]}
    onMouseEnter={[Function]}
  >
    Users SSR
  </a>
  <a
    href="/users-ssg"
    onClick={[Function]}
    onMouseEnter={[Function]}
  >
    Users SSG
  </a>
  <a
    href="/users-swr"
    onClick={[Function]}
    onMouseEnter={[Function]}
  >
    Users useSWR
  </a>
  <a
    href="/users-recoil"
    onClick={[Function]}
    onMouseEnter={[Function]}
  >
    Users useUsers
  </a>
</div>
`;

exports[`Storyshots molecules/Menu Default 1`] = `
<button
  aria-describedby="popup-2"
  onClick={[Function]}
  type="button"
>
  trigger
</button>
`;

exports[`Storyshots molecules/ToastContainer Default 1`] = `
Array [
  <div
    className="Toastify"
  />,
  <button
    onClick={[Function]}
    type="button"
  >
    success toast
  </button>,
  <button
    onClick={[Function]}
    type="button"
  >
    info toast
  </button>,
  <button
    onClick={[Function]}
    type="button"
  >
    warn toast
  </button>,
  <button
    onClick={[Function]}
    type="button"
  >
    error toast
  </button>,
]
`;

exports[`Storyshots organisms/Footer Desktop 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

@media (min-width: 640px) {
  .emotion-0 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width: 1024px) {
  .emotion-0 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

.emotion-0>p {
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

.emotion-0>p>a {
  --tw-text-opacity: 1;
  color: rgba(75, 85, 99, var(--tw-text-opacity));
  margin-left: 0.25rem;
  -webkit-text-decoration: none;
  text-decoration: none;
}

<div
  className="emotion-0 emotion-1"
>
  <p>
    ©
    2020 - 2021
     *WEBSITE TITLE* —
    <a
      href="https://twitter.com/uitspitss"
      rel="noopener noreferrer"
      target="_blank"
    >
      @uitspitss
    </a>
  </p>
</div>
`;

exports[`Storyshots organisms/Footer Mobile 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

@media (min-width: 640px) {
  .emotion-0 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width: 1024px) {
  .emotion-0 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

.emotion-0>p {
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

.emotion-0>p>a {
  --tw-text-opacity: 1;
  color: rgba(75, 85, 99, var(--tw-text-opacity));
  margin-left: 0.25rem;
  -webkit-text-decoration: none;
  text-decoration: none;
}

<div
  className="emotion-0 emotion-1"
>
  <p>
    ©
    2020 - 2021
     *WEBSITE TITLE* —
    <a
      href="https://twitter.com/uitspitss"
      rel="noopener noreferrer"
      target="_blank"
    >
      @uitspitss
    </a>
  </p>
</div>
`;

exports[`Storyshots organisms/Header Desktop 1`] = `
.emotion-0 {
  --tw-bg-opacity: 1;
  background-color: rgba(165, 180, 252, var(--tw-bg-opacity));
  margin-bottom: 0.5rem;
}

@media (min-width: 1024px) {
  .emotion-0 {
    margin-bottom: 1rem;
  }
}

.emotion-0>nav {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

@media (min-width: 1024px) {
  .emotion-0>nav {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

.emotion-0>nav>.title {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-right: 1.5rem;
  --tw-text-opacity: 1;
  color: rgba(243, 244, 246, var(--tw-text-opacity));
  font-weight: 600;
  font-size: 1.25rem;
  line-height: 1.75rem;
  letter-spacing: -0.025em;
}

.emotion-0>nav>.toggleButton {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-width: 1024px) {
  .emotion-0>nav>.toggleButton {
    display: none;
  }
}

.emotion-0>nav>.menuList {
  width: 100%;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  display: none;
}

@media (min-width: 1024px) {
  .emotion-0>nav>.menuList {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    width: auto;
  }
}

@media (min-width: 1024px) {
  .emotion-0>nav>.menuList {
    display: block;
  }
}

.emotion-2 {
  font-size: 1rem;
  line-height: 1.5rem;
  border-radius: 0.25rem;
  border-style: none;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.emotion-4 {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

@media (min-width: 1024px) {
  .emotion-4 {
    -webkit-box-flex: 1;
    -webkit-flex-grow: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
  }
}

.emotion-4>a {
  display: block;
  margin-top: 1rem;
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

@media (min-width: 1024px) {
  .emotion-4>a {
    display: inline-block;
    margin-top: 0px;
  }
}

.emotion-4>a:not(:last-child) {
  margin-right: 1rem;
}

<div
  className="emotion-0 emotion-1"
>
  <nav>
    <div
      className="title"
    >
      <a
        href="/"
        onClick={[Function]}
        onMouseEnter={[Function]}
      >
        *WEBSITE TITLE*
      </a>
    </div>
    <div
      className="toggleButton"
    >
      <button
        className="emotion-2 emotion-3"
        onClick={[Function]}
        type="button"
      >
        <svg
          fill="none"
          height="24"
          stroke="currentColor"
          viewBox="0 0 24 24"
          width="24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            className="closed"
            d="M4 6h16M4 12h16M4 18h16"
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth={2}
          />
        </svg>
      </button>
    </div>
    <div
      className="menuList"
    >
      <div
        className="emotion-4 emotion-5"
      >
        <a
          href="/users-ssr"
          onClick={[Function]}
          onMouseEnter={[Function]}
        >
          Users SSR
        </a>
        <a
          href="/users-ssg"
          onClick={[Function]}
          onMouseEnter={[Function]}
        >
          Users SSG
        </a>
        <a
          href="/users-swr"
          onClick={[Function]}
          onMouseEnter={[Function]}
        >
          Users useSWR
        </a>
        <a
          href="/users-recoil"
          onClick={[Function]}
          onMouseEnter={[Function]}
        >
          Users useUsers
        </a>
      </div>
    </div>
  </nav>
</div>
`;

exports[`Storyshots organisms/Header Mobile 1`] = `
.emotion-0 {
  --tw-bg-opacity: 1;
  background-color: rgba(165, 180, 252, var(--tw-bg-opacity));
  margin-bottom: 0.5rem;
}

@media (min-width: 1024px) {
  .emotion-0 {
    margin-bottom: 1rem;
  }
}

.emotion-0>nav {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

@media (min-width: 1024px) {
  .emotion-0>nav {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

.emotion-0>nav>.title {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-right: 1.5rem;
  --tw-text-opacity: 1;
  color: rgba(243, 244, 246, var(--tw-text-opacity));
  font-weight: 600;
  font-size: 1.25rem;
  line-height: 1.75rem;
  letter-spacing: -0.025em;
}

.emotion-0>nav>.toggleButton {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-width: 1024px) {
  .emotion-0>nav>.toggleButton {
    display: none;
  }
}

.emotion-0>nav>.menuList {
  width: 100%;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  display: none;
}

@media (min-width: 1024px) {
  .emotion-0>nav>.menuList {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    width: auto;
  }
}

@media (min-width: 1024px) {
  .emotion-0>nav>.menuList {
    display: block;
  }
}

.emotion-2 {
  font-size: 1rem;
  line-height: 1.5rem;
  border-radius: 0.25rem;
  border-style: none;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.emotion-4 {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

@media (min-width: 1024px) {
  .emotion-4 {
    -webkit-box-flex: 1;
    -webkit-flex-grow: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
  }
}

.emotion-4>a {
  display: block;
  margin-top: 1rem;
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

@media (min-width: 1024px) {
  .emotion-4>a {
    display: inline-block;
    margin-top: 0px;
  }
}

.emotion-4>a:not(:last-child) {
  margin-right: 1rem;
}

<div
  className="emotion-0 emotion-1"
>
  <nav>
    <div
      className="title"
    >
      <a
        href="/"
        onClick={[Function]}
        onMouseEnter={[Function]}
      >
        *WEBSITE TITLE*
      </a>
    </div>
    <div
      className="toggleButton"
    >
      <button
        className="emotion-2 emotion-3"
        onClick={[Function]}
        type="button"
      >
        <svg
          fill="none"
          height="24"
          stroke="currentColor"
          viewBox="0 0 24 24"
          width="24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            className="closed"
            d="M4 6h16M4 12h16M4 18h16"
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth={2}
          />
        </svg>
      </button>
    </div>
    <div
      className="menuList"
    >
      <div
        className="emotion-4 emotion-5"
      >
        <a
          href="/users-ssr"
          onClick={[Function]}
          onMouseEnter={[Function]}
        >
          Users SSR
        </a>
        <a
          href="/users-ssg"
          onClick={[Function]}
          onMouseEnter={[Function]}
        >
          Users SSG
        </a>
        <a
          href="/users-swr"
          onClick={[Function]}
          onMouseEnter={[Function]}
        >
          Users useSWR
        </a>
        <a
          href="/users-recoil"
          onClick={[Function]}
          onMouseEnter={[Function]}
        >
          Users useUsers
        </a>
      </div>
    </div>
  </nav>
</div>
`;

exports[`Storyshots organisms/SimpleForm Desktop 1`] = `
.emotion-0 .headerText {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  text-align: center;
  margin-bottom: 1rem;
}

.emotion-0 .headerText>h1 {
  font-size: 1.5rem;
  line-height: 2rem;
  font-weight: 500;
  margin-bottom: 1rem;
  --tw-text-opacity: 1;
  color: rgba(99, 102, 241, var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .emotion-0 .headerText>h1 {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
}

.emotion-0 .headerText>p {
  margin-left: auto;
  margin-right: auto;
  line-height: 1.5rem;
  font-size: 1rem;
}

@media (min-width: 1024px) {
  .emotion-0 .headerText>p {
    width: 66.666667%;
  }
}

.emotion-0 .inputFields {
  margin-left: auto;
  margin-right: auto;
}

@media (min-width: 768px) {
  .emotion-0 .inputFields {
    width: 66.666667%;
  }
}

@media (min-width: 1024px) {
  .emotion-0 .inputFields {
    width: 50%;
  }
}

.emotion-0 .inputFields>div {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
}

.emotion-0 .inputFields>div>div {
  padding: 0.5rem;
}

.emotion-0 .inputFields>div>div.submitButton {
  margin-left: auto;
  margin-right: auto;
}

.emotion-0 .error-text {
  --tw-text-opacity: 1;
  color: rgba(236, 72, 153, var(--tw-text-opacity));
}

.emotion-2>input {
  width: 100%;
  --tw-bg-opacity: 1;
  background-color: rgba(243, 244, 246, var(--tw-bg-opacity));
  border-radius: 0.25rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgba(156, 163, 175, var(--tw-border-opacity));
}

.emotion-2>input:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-border-opacity: 1;
  border-color: rgba(99, 102, 241, var(--tw-border-opacity));
}

.emotion-2>.error {
  --tw-text-opacity: 1;
  color: rgba(239, 68, 68, var(--tw-text-opacity));
}

.emotion-4 .select__control {
  --tw-bg-opacity: 1;
  background-color: rgba(243, 244, 246, var(--tw-bg-opacity));
  border-radius: 0.25rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgba(156, 163, 175, var(--tw-border-opacity));
}

.emotion-4 .select__control:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-border-opacity: 1;
  border-color: rgba(99, 102, 241, var(--tw-border-opacity));
}

.emotion-4 .select__value-container {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.emotion-4 .error {
  --tw-text-opacity: 1;
  color: rgba(239, 68, 68, var(--tw-text-opacity));
}

.emotion-6 {
  position: relative;
  box-sizing: border-box;
}

.emotion-7 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: hsl(0, 0%, 100%);
  border-color: hsl(0, 0%, 80%);
  border-radius: 4px;
  border-style: solid;
  border-width: 1px;
  cursor: default;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  min-height: 38px;
  outline: 0!important;
  position: relative;
  -webkit-transition: all 100ms;
  transition: all 100ms;
  box-sizing: border-box;
}

.emotion-7:hover {
  border-color: hsl(0, 0%, 70%);
}

.emotion-8 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 2px 8px;
  -webkit-overflow-scrolling: touch;
  position: relative;
  overflow: hidden;
  box-sizing: border-box;
}

.emotion-9 {
  color: hsl(0, 0%, 50%);
  margin-left: 2px;
  margin-right: 2px;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  box-sizing: border-box;
}

.emotion-10 {
  margin: 2px;
  padding-bottom: 2px;
  padding-top: 2px;
  visibility: visible;
  color: hsl(0, 0%, 20%);
  box-sizing: border-box;
}

.emotion-11 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  box-sizing: border-box;
}

.emotion-12 {
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  background-color: hsl(0, 0%, 80%);
  margin-bottom: 8px;
  margin-top: 8px;
  width: 1px;
  box-sizing: border-box;
}

.emotion-13 {
  color: hsl(0, 0%, 80%);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px;
  -webkit-transition: color 150ms;
  transition: color 150ms;
  box-sizing: border-box;
}

.emotion-13:hover {
  color: hsl(0, 0%, 60%);
}

.emotion-14 {
  display: inline-block;
  fill: currentColor;
  line-height: 1;
  stroke: currentColor;
  stroke-width: 0;
}

.emotion-15>select {
  width: 100%;
  --tw-bg-opacity: 1;
  background-color: rgba(243, 244, 246, var(--tw-bg-opacity));
  border-radius: 0.25rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgba(156, 163, 175, var(--tw-border-opacity));
}

.emotion-15>select:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-border-opacity: 1;
  border-color: rgba(99, 102, 241, var(--tw-border-opacity));
}

.emotion-15>.error {
  --tw-text-opacity: 1;
  color: rgba(239, 68, 68, var(--tw-text-opacity));
}

.emotion-17> {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-17>label>input {
  margin-right: 0.5rem;
  border-radius: 0.25rem;
}

.emotion-17>div>.error {
  --tw-text-opacity: 1;
  color: rgba(239, 68, 68, var(--tw-text-opacity));
}

.emotion-19 {
  font-size: 1rem;
  line-height: 1.5rem;
  border-radius: 0.25rem;
  border-style: none;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  --tw-bg-opacity: 1;
  background-color: rgba(99, 102, 241, var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgba(229, 231, 235, var(--tw-text-opacity));
  font-size: 1.125rem;
  line-height: 1.75rem;
}

<div
  className="emotion-0 emotion-1"
>
  <div
    className="headerText"
  >
    <h1>
      Form
    </h1>
  </div>
  <form
    onSubmit={[Function]}
  >
    <div
      className="inputFields"
    >
      <div>
        <div
          className="email"
        >
          <div
            className="emotion-2 emotion-3"
          >
            <label
              htmlFor="email"
            >
              email
            </label>
            <input
              aria-invalid="false"
              aria-label="email"
              id="email"
              name="email"
              placeholder="Email"
              type="email"
            />
          </div>
        </div>
        <div
          className="Sex"
        >
          <div
            className="emotion-4 emotion-5"
          >
            <label
              htmlFor="sex"
            >
              sex
            </label>
            <div
              className=" emotion-6"
              id="sex"
              onKeyDown={[Function]}
            >
              <div
                className="select__control emotion-7"
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
              >
                <div
                  className="select__value-container emotion-8"
                >
                  <div
                    className="select__placeholder emotion-9"
                  >
                    Sex
                  </div>
                  <div
                    className="emotion-10"
                  >
                    <div
                      className="select__input"
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <input
                        aria-autocomplete="list"
                        aria-label="sex"
                        autoCapitalize="none"
                        autoComplete="off"
                        autoCorrect="off"
                        disabled={false}
                        id="react-select-3-input"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        spellCheck="false"
                        style={
                          Object {
                            "background": 0,
                            "border": 0,
                            "boxSizing": "content-box",
                            "color": "inherit",
                            "fontSize": "inherit",
                            "label": "input",
                            "opacity": 1,
                            "outline": 0,
                            "padding": 0,
                            "width": "1px",
                          }
                        }
                        tabIndex="0"
                        type="text"
                        value=""
                      />
                      <div
                        style={
                          Object {
                            "height": 0,
                            "left": 0,
                            "overflow": "scroll",
                            "position": "absolute",
                            "top": 0,
                            "visibility": "hidden",
                            "whiteSpace": "pre",
                          }
                        }
                      >
                        
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  className="select__indicators emotion-11"
                >
                  <span
                    className="select__indicator-separator emotion-12"
                  />
                  <div
                    aria-hidden="true"
                    className="select__indicator select__dropdown-indicator emotion-13"
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                  >
                    <svg
                      aria-hidden="true"
                      className="emotion-14"
                      focusable="false"
                      height={20}
                      viewBox="0 0 20 20"
                      width={20}
                    >
                      <path
                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                      />
                    </svg>
                  </div>
                </div>
              </div>
              <input
                name="sex"
                type="hidden"
                value=""
              />
            </div>
          </div>
        </div>
        <div
          className="linkNews"
        >
          <div
            className="emotion-15 emotion-16"
          >
            <label
              htmlFor="like-news"
            >
              Which news do you like?
            </label>
            <select
              aria-invalid="false"
              aria-label="Which news do you like?"
              id="like-news"
              name="like-news"
            >
              <option
                value=""
              >
                choose news type
              </option>
              <option
                value="tech"
              >
                Tech
              </option>
              <option
                value="political"
              >
                Political
              </option>
              <option
                value="peace"
              >
                Peace
              </option>
            </select>
          </div>
        </div>
        <div
          className="Check"
        >
          <div
            className="emotion-17 emotion-18"
          >
            <label
              htmlFor="agreement"
            >
              <input
                aria-invalid="false"
                aria-label="agreement"
                id="agreement"
                name="agreement"
                type="checkbox"
              />
              <span
                className="label"
              >
                agreement
              </span>
            </label>
          </div>
        </div>
        <div
          className="submitButton"
        >
          <button
            className="emotion-19 emotion-20"
            size="large"
            type="submit"
          >
            Submit
          </button>
        </div>
      </div>
    </div>
  </form>
</div>
`;

exports[`Storyshots organisms/SimpleForm Mobile 1`] = `
.emotion-0 .headerText {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  text-align: center;
  margin-bottom: 1rem;
}

.emotion-0 .headerText>h1 {
  font-size: 1.5rem;
  line-height: 2rem;
  font-weight: 500;
  margin-bottom: 1rem;
  --tw-text-opacity: 1;
  color: rgba(99, 102, 241, var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .emotion-0 .headerText>h1 {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
}

.emotion-0 .headerText>p {
  margin-left: auto;
  margin-right: auto;
  line-height: 1.5rem;
  font-size: 1rem;
}

@media (min-width: 1024px) {
  .emotion-0 .headerText>p {
    width: 66.666667%;
  }
}

.emotion-0 .inputFields {
  margin-left: auto;
  margin-right: auto;
}

@media (min-width: 768px) {
  .emotion-0 .inputFields {
    width: 66.666667%;
  }
}

@media (min-width: 1024px) {
  .emotion-0 .inputFields {
    width: 50%;
  }
}

.emotion-0 .inputFields>div {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
}

.emotion-0 .inputFields>div>div {
  padding: 0.5rem;
}

.emotion-0 .inputFields>div>div.submitButton {
  margin-left: auto;
  margin-right: auto;
}

.emotion-0 .error-text {
  --tw-text-opacity: 1;
  color: rgba(236, 72, 153, var(--tw-text-opacity));
}

.emotion-2>input {
  width: 100%;
  --tw-bg-opacity: 1;
  background-color: rgba(243, 244, 246, var(--tw-bg-opacity));
  border-radius: 0.25rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgba(156, 163, 175, var(--tw-border-opacity));
}

.emotion-2>input:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-border-opacity: 1;
  border-color: rgba(99, 102, 241, var(--tw-border-opacity));
}

.emotion-2>.error {
  --tw-text-opacity: 1;
  color: rgba(239, 68, 68, var(--tw-text-opacity));
}

.emotion-4 .select__control {
  --tw-bg-opacity: 1;
  background-color: rgba(243, 244, 246, var(--tw-bg-opacity));
  border-radius: 0.25rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgba(156, 163, 175, var(--tw-border-opacity));
}

.emotion-4 .select__control:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-border-opacity: 1;
  border-color: rgba(99, 102, 241, var(--tw-border-opacity));
}

.emotion-4 .select__value-container {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.emotion-4 .error {
  --tw-text-opacity: 1;
  color: rgba(239, 68, 68, var(--tw-text-opacity));
}

.emotion-6 {
  position: relative;
  box-sizing: border-box;
}

.emotion-7 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: hsl(0, 0%, 100%);
  border-color: hsl(0, 0%, 80%);
  border-radius: 4px;
  border-style: solid;
  border-width: 1px;
  cursor: default;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  min-height: 38px;
  outline: 0!important;
  position: relative;
  -webkit-transition: all 100ms;
  transition: all 100ms;
  box-sizing: border-box;
}

.emotion-7:hover {
  border-color: hsl(0, 0%, 70%);
}

.emotion-8 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 2px 8px;
  -webkit-overflow-scrolling: touch;
  position: relative;
  overflow: hidden;
  box-sizing: border-box;
}

.emotion-9 {
  color: hsl(0, 0%, 50%);
  margin-left: 2px;
  margin-right: 2px;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  box-sizing: border-box;
}

.emotion-10 {
  margin: 2px;
  padding-bottom: 2px;
  padding-top: 2px;
  visibility: visible;
  color: hsl(0, 0%, 20%);
  box-sizing: border-box;
}

.emotion-11 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  box-sizing: border-box;
}

.emotion-12 {
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  background-color: hsl(0, 0%, 80%);
  margin-bottom: 8px;
  margin-top: 8px;
  width: 1px;
  box-sizing: border-box;
}

.emotion-13 {
  color: hsl(0, 0%, 80%);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px;
  -webkit-transition: color 150ms;
  transition: color 150ms;
  box-sizing: border-box;
}

.emotion-13:hover {
  color: hsl(0, 0%, 60%);
}

.emotion-14 {
  display: inline-block;
  fill: currentColor;
  line-height: 1;
  stroke: currentColor;
  stroke-width: 0;
}

.emotion-15>select {
  width: 100%;
  --tw-bg-opacity: 1;
  background-color: rgba(243, 244, 246, var(--tw-bg-opacity));
  border-radius: 0.25rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgba(156, 163, 175, var(--tw-border-opacity));
}

.emotion-15>select:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-border-opacity: 1;
  border-color: rgba(99, 102, 241, var(--tw-border-opacity));
}

.emotion-15>.error {
  --tw-text-opacity: 1;
  color: rgba(239, 68, 68, var(--tw-text-opacity));
}

.emotion-17> {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-17>label>input {
  margin-right: 0.5rem;
  border-radius: 0.25rem;
}

.emotion-17>div>.error {
  --tw-text-opacity: 1;
  color: rgba(239, 68, 68, var(--tw-text-opacity));
}

.emotion-19 {
  font-size: 1rem;
  line-height: 1.5rem;
  border-radius: 0.25rem;
  border-style: none;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  --tw-bg-opacity: 1;
  background-color: rgba(99, 102, 241, var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgba(229, 231, 235, var(--tw-text-opacity));
  font-size: 1.125rem;
  line-height: 1.75rem;
}

<div
  className="emotion-0 emotion-1"
>
  <div
    className="headerText"
  >
    <h1>
      Form
    </h1>
  </div>
  <form
    onSubmit={[Function]}
  >
    <div
      className="inputFields"
    >
      <div>
        <div
          className="email"
        >
          <div
            className="emotion-2 emotion-3"
          >
            <label
              htmlFor="email"
            >
              email
            </label>
            <input
              aria-invalid="false"
              aria-label="email"
              id="email"
              name="email"
              placeholder="Email"
              type="email"
            />
          </div>
        </div>
        <div
          className="Sex"
        >
          <div
            className="emotion-4 emotion-5"
          >
            <label
              htmlFor="sex"
            >
              sex
            </label>
            <div
              className=" emotion-6"
              id="sex"
              onKeyDown={[Function]}
            >
              <div
                className="select__control emotion-7"
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
              >
                <div
                  className="select__value-container emotion-8"
                >
                  <div
                    className="select__placeholder emotion-9"
                  >
                    Sex
                  </div>
                  <div
                    className="emotion-10"
                  >
                    <div
                      className="select__input"
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <input
                        aria-autocomplete="list"
                        aria-label="sex"
                        autoCapitalize="none"
                        autoComplete="off"
                        autoCorrect="off"
                        disabled={false}
                        id="react-select-4-input"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        spellCheck="false"
                        style={
                          Object {
                            "background": 0,
                            "border": 0,
                            "boxSizing": "content-box",
                            "color": "inherit",
                            "fontSize": "inherit",
                            "label": "input",
                            "opacity": 1,
                            "outline": 0,
                            "padding": 0,
                            "width": "1px",
                          }
                        }
                        tabIndex="0"
                        type="text"
                        value=""
                      />
                      <div
                        style={
                          Object {
                            "height": 0,
                            "left": 0,
                            "overflow": "scroll",
                            "position": "absolute",
                            "top": 0,
                            "visibility": "hidden",
                            "whiteSpace": "pre",
                          }
                        }
                      >
                        
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  className="select__indicators emotion-11"
                >
                  <span
                    className="select__indicator-separator emotion-12"
                  />
                  <div
                    aria-hidden="true"
                    className="select__indicator select__dropdown-indicator emotion-13"
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                  >
                    <svg
                      aria-hidden="true"
                      className="emotion-14"
                      focusable="false"
                      height={20}
                      viewBox="0 0 20 20"
                      width={20}
                    >
                      <path
                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                      />
                    </svg>
                  </div>
                </div>
              </div>
              <input
                name="sex"
                type="hidden"
                value=""
              />
            </div>
          </div>
        </div>
        <div
          className="linkNews"
        >
          <div
            className="emotion-15 emotion-16"
          >
            <label
              htmlFor="like-news"
            >
              Which news do you like?
            </label>
            <select
              aria-invalid="false"
              aria-label="Which news do you like?"
              id="like-news"
              name="like-news"
            >
              <option
                value=""
              >
                choose news type
              </option>
              <option
                value="tech"
              >
                Tech
              </option>
              <option
                value="political"
              >
                Political
              </option>
              <option
                value="peace"
              >
                Peace
              </option>
            </select>
          </div>
        </div>
        <div
          className="Check"
        >
          <div
            className="emotion-17 emotion-18"
          >
            <label
              htmlFor="agreement"
            >
              <input
                aria-invalid="false"
                aria-label="agreement"
                id="agreement"
                name="agreement"
                type="checkbox"
              />
              <span
                className="label"
              >
                agreement
              </span>
            </label>
          </div>
        </div>
        <div
          className="submitButton"
        >
          <button
            className="emotion-19 emotion-20"
            size="large"
            type="submit"
          >
            Submit
          </button>
        </div>
      </div>
    </div>
  </form>
</div>
`;

exports[`Storyshots organisms/UserList Default 1`] = `
<div
  className="emotion-0 emotion-1"
>
  <p>
    1
    : 
    john
  </p>
  <p>
    2
    : 
    lisa
  </p>
</div>
`;

exports[`Storyshots templates/Layout Desktop 1`] = `
.emotion-0>header {
  -webkit-position: sticky;
  position: sticky;
  top: 0px;
  left: 0px;
  width: 100%;
  height: 2.75rem;
}

.emotion-0>main {
  height: calc(100% - 44px - 36px);
  min-height: calc(100vh - 44px - 36px);
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.emotion-2 {
  --tw-bg-opacity: 1;
  background-color: rgba(165, 180, 252, var(--tw-bg-opacity));
  margin-bottom: 0.5rem;
}

@media (min-width: 1024px) {
  .emotion-2 {
    margin-bottom: 1rem;
  }
}

.emotion-2>nav {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

@media (min-width: 1024px) {
  .emotion-2>nav {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

.emotion-2>nav>.title {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-right: 1.5rem;
  --tw-text-opacity: 1;
  color: rgba(243, 244, 246, var(--tw-text-opacity));
  font-weight: 600;
  font-size: 1.25rem;
  line-height: 1.75rem;
  letter-spacing: -0.025em;
}

.emotion-2>nav>.toggleButton {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-width: 1024px) {
  .emotion-2>nav>.toggleButton {
    display: none;
  }
}

.emotion-2>nav>.menuList {
  width: 100%;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  display: none;
}

@media (min-width: 1024px) {
  .emotion-2>nav>.menuList {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    width: auto;
  }
}

@media (min-width: 1024px) {
  .emotion-2>nav>.menuList {
    display: block;
  }
}

.emotion-4 {
  font-size: 1rem;
  line-height: 1.5rem;
  border-radius: 0.25rem;
  border-style: none;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.emotion-6 {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

@media (min-width: 1024px) {
  .emotion-6 {
    -webkit-box-flex: 1;
    -webkit-flex-grow: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
  }
}

.emotion-6>a {
  display: block;
  margin-top: 1rem;
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

@media (min-width: 1024px) {
  .emotion-6>a {
    display: inline-block;
    margin-top: 0px;
  }
}

.emotion-6>a:not(:last-child) {
  margin-right: 1rem;
}

.emotion-8 {
  --tw-bg-opacity: 1;
  background-color: rgba(107, 114, 128, var(--tw-bg-opacity));
  padding: 1rem;
}

.emotion-9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

@media (min-width: 640px) {
  .emotion-9 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width: 1024px) {
  .emotion-9 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

.emotion-9>p {
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

.emotion-9>p>a {
  --tw-text-opacity: 1;
  color: rgba(75, 85, 99, var(--tw-text-opacity));
  margin-left: 0.25rem;
  -webkit-text-decoration: none;
  text-decoration: none;
}

<div
  className="emotion-0 emotion-1"
>
  <header>
    <div
      className="header emotion-2 emotion-3"
    >
      <nav>
        <div
          className="title"
        >
          <a
            href="/"
            onClick={[Function]}
            onMouseEnter={[Function]}
          >
            *WEBSITE TITLE*
          </a>
        </div>
        <div
          className="toggleButton"
        >
          <button
            className="emotion-4 emotion-5"
            onClick={[Function]}
            type="button"
          >
            <svg
              fill="none"
              height="24"
              stroke="currentColor"
              viewBox="0 0 24 24"
              width="24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                className="closed"
                d="M4 6h16M4 12h16M4 18h16"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </button>
        </div>
        <div
          className="menuList"
        >
          <div
            className="emotion-6 emotion-7"
          >
            <a
              href="/users-ssr"
              onClick={[Function]}
              onMouseEnter={[Function]}
            >
              Users SSR
            </a>
            <a
              href="/users-ssg"
              onClick={[Function]}
              onMouseEnter={[Function]}
            >
              Users SSG
            </a>
            <a
              href="/users-swr"
              onClick={[Function]}
              onMouseEnter={[Function]}
            >
              Users useSWR
            </a>
            <a
              href="/users-recoil"
              onClick={[Function]}
              onMouseEnter={[Function]}
            >
              Users useUsers
            </a>
          </div>
        </div>
      </nav>
    </div>
  </header>
  <main>
    <div
      className="emotion-8"
    >
      MAIN CONTENT
    </div>
  </main>
  <footer>
    <div
      className="emotion-9 emotion-10"
    >
      <p>
        ©
        2020 - 2021
         *WEBSITE TITLE* —
        <a
          href="https://twitter.com/uitspitss"
          rel="noopener noreferrer"
          target="_blank"
        >
          @uitspitss
        </a>
      </p>
    </div>
  </footer>
</div>
`;

exports[`Storyshots templates/Layout Mobile 1`] = `
.emotion-0>header {
  -webkit-position: sticky;
  position: sticky;
  top: 0px;
  left: 0px;
  width: 100%;
  height: 2.75rem;
}

.emotion-0>main {
  height: calc(100% - 44px - 36px);
  min-height: calc(100vh - 44px - 36px);
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.emotion-2 {
  --tw-bg-opacity: 1;
  background-color: rgba(165, 180, 252, var(--tw-bg-opacity));
  margin-bottom: 0.5rem;
}

@media (min-width: 1024px) {
  .emotion-2 {
    margin-bottom: 1rem;
  }
}

.emotion-2>nav {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

@media (min-width: 1024px) {
  .emotion-2>nav {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

.emotion-2>nav>.title {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-right: 1.5rem;
  --tw-text-opacity: 1;
  color: rgba(243, 244, 246, var(--tw-text-opacity));
  font-weight: 600;
  font-size: 1.25rem;
  line-height: 1.75rem;
  letter-spacing: -0.025em;
}

.emotion-2>nav>.toggleButton {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-width: 1024px) {
  .emotion-2>nav>.toggleButton {
    display: none;
  }
}

.emotion-2>nav>.menuList {
  width: 100%;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  display: none;
}

@media (min-width: 1024px) {
  .emotion-2>nav>.menuList {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    width: auto;
  }
}

@media (min-width: 1024px) {
  .emotion-2>nav>.menuList {
    display: block;
  }
}

.emotion-4 {
  font-size: 1rem;
  line-height: 1.5rem;
  border-radius: 0.25rem;
  border-style: none;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.emotion-6 {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

@media (min-width: 1024px) {
  .emotion-6 {
    -webkit-box-flex: 1;
    -webkit-flex-grow: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
  }
}

.emotion-6>a {
  display: block;
  margin-top: 1rem;
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

@media (min-width: 1024px) {
  .emotion-6>a {
    display: inline-block;
    margin-top: 0px;
  }
}

.emotion-6>a:not(:last-child) {
  margin-right: 1rem;
}

.emotion-8 {
  --tw-bg-opacity: 1;
  background-color: rgba(107, 114, 128, var(--tw-bg-opacity));
  padding: 1rem;
}

.emotion-9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

@media (min-width: 640px) {
  .emotion-9 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width: 1024px) {
  .emotion-9 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

.emotion-9>p {
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

.emotion-9>p>a {
  --tw-text-opacity: 1;
  color: rgba(75, 85, 99, var(--tw-text-opacity));
  margin-left: 0.25rem;
  -webkit-text-decoration: none;
  text-decoration: none;
}

<div
  className="emotion-0 emotion-1"
>
  <header>
    <div
      className="header emotion-2 emotion-3"
    >
      <nav>
        <div
          className="title"
        >
          <a
            href="/"
            onClick={[Function]}
            onMouseEnter={[Function]}
          >
            *WEBSITE TITLE*
          </a>
        </div>
        <div
          className="toggleButton"
        >
          <button
            className="emotion-4 emotion-5"
            onClick={[Function]}
            type="button"
          >
            <svg
              fill="none"
              height="24"
              stroke="currentColor"
              viewBox="0 0 24 24"
              width="24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                className="closed"
                d="M4 6h16M4 12h16M4 18h16"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </button>
        </div>
        <div
          className="menuList"
        >
          <div
            className="emotion-6 emotion-7"
          >
            <a
              href="/users-ssr"
              onClick={[Function]}
              onMouseEnter={[Function]}
            >
              Users SSR
            </a>
            <a
              href="/users-ssg"
              onClick={[Function]}
              onMouseEnter={[Function]}
            >
              Users SSG
            </a>
            <a
              href="/users-swr"
              onClick={[Function]}
              onMouseEnter={[Function]}
            >
              Users useSWR
            </a>
            <a
              href="/users-recoil"
              onClick={[Function]}
              onMouseEnter={[Function]}
            >
              Users useUsers
            </a>
          </div>
        </div>
      </nav>
    </div>
  </header>
  <main>
    <div
      className="emotion-8"
    >
      MAIN CONTENT
    </div>
  </main>
  <footer>
    <div
      className="emotion-9 emotion-10"
    >
      <p>
        ©
        2020 - 2021
         *WEBSITE TITLE* —
        <a
          href="https://twitter.com/uitspitss"
          rel="noopener noreferrer"
          target="_blank"
        >
          @uitspitss
        </a>
      </p>
    </div>
  </footer>
</div>
`;
